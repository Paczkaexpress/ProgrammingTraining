import sys
# Import datasets, classifiers and performance metrics
from sklearn import datasets, svm, metrics
from sklearn.model_selection import train_test_split
import numpy as np
import random

def getLettersFromFile(fName):
    # rawTxt = f.read().split("\n")
    rawTxt = sys.stdin.readlines()
    rawTxt = rawTxt[1:]
    colMap = []

    for line in rawTxt:
        line = line.split(" ")
        for v in line:
            colMap.append(tuple(map(int, v.split(','))))

    letter = [[] * x for x in range(5)]

    for j in range(5):
        for i in range(len(colMap)):
            if i % 60 < j * 9 + 13 and i % 60 > j * 9 + 4:
                letter[j].append(colMap[i])

    return letter


def imgTreshold(x):
    if x > 100:
        return 255
    else:
        return 0

def assignTrainedValues(neurons):

    neurons['O'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['1'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['2'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['3'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['4'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,31, 31, -9,31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['5'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,31, 31, 31, -9,-9,31, 31, 31, -9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['6'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, -9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,31, 31, 31, -9,-9,31, 31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['7'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['8'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['9'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, 31, -9,-9,31, 31, 31, -9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['Q'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,-9,31, 31, 31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['W'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['E'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['R'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, -9,31, 31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['T'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['Y'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['U'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['I'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['0'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['P'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['A'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['S'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['D'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['F'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['G'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['H'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['J'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['K'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['L'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['Z'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['X'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['C'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,31, -9,31, 31, -9,-9,-9,31, 31, -9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['V'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['B'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, -9,-9,-9,31, 31, -9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,31, 31, -9,31, 31, 31, 31, 31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['N'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, -9,-9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, 31, 31, 31, 31, -9,-9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,-9,31, 31, 31, 31, 31, 31, -9,-9,-9,31, 31, 31, 31, 31, -9,-9,-9,31, 31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]
    neurons['M'].synaptic_weight = [-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,31, 31, -9,-9,-9,-9,31, 31, 31, 31, 31, -9,-9,31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,31, 31, -9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, 31, 31, -9,-9,-9,-9,31, 31, -9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9.0]

class Neuron():
    def __init__(self, nr_of_inputs):
        # self.synaptic_weight = np.random.random((nr_of_inputs,1))
        self.synaptic_weight = [0]*nr_of_inputs
        # print("initial value of synaptic weight {}".format(self.synaptic_weight.T))

    def train(self, type, input_items, training_output, number_of_iterations):
        # print(input_items)
        input_items = np.array(input_items)[np.newaxis]
        for _ in range(number_of_iterations):
            output = self.think(input_items)
            if type == training_output:
                t = 1
            else:
                t = 0

            error = t - output
            adjustment = np.dot(input_items.T, error * self.sigmoidDot(output))
            self.synaptic_weight += adjustment
        output = self.sigmoid(np.dot(input_items, self.synaptic_weight))
        return output

    def think(self, input_items):
        output = self.sigmoid(np.dot(input_items, self.synaptic_weight))
        return output

    def sigmoid(self, x):
        return 1 / (1 + np.exp(-x))

    def sigmoidDot(self, x):
        return self.sigmoid(x) * (1 - self.sigmoid(x))

if __name__ == "__main__":
    IMAGE_SIZE = 8 * 30
    letterSet = "0123456789QWERTYUIOPASDFGHJKLZXCVBNM"
    # create new neuron for every new letter
    dicNeuron = {}

    for l in letterSet:
        if l not in dicNeuron: # trying to get only a tag from name
            dicNeuron[l] = Neuron(IMAGE_SIZE)

    assignTrainedValues(dicNeuron)

    predictionVal = None
    predictionKey = None

    ans = ""
    fileToOpen = "2"
    letters = getLettersFromFile(fileToOpen)
    for let in letters:
        im = [(0.0722*x[0] + 0.7152*x[1] + 0.2126*x[2]) for x in let]
        # print(im)
        pixelVal = np.array(im)
        pixelVal = [(255 - imgTreshold(x)) for x in pixelVal]
        for d in dicNeuron.items():
            pred = np.dot(pixelVal, d[1].synaptic_weight)
            pos = 0
            for x in d[1].synaptic_weight:
                if x > 0:
                    pos += x
            pred = pred / pos
            # print("Neuron {}, pred {}, dot prod {}".format(d[0], pred, np.dot(pixelVal, d[1].synaptic_weight)))
            if predictionVal == None:
                predictionVal = pred
                predictionKey = d[0]
            else:
                if predictionVal < pred:
                    predictionVal = pred
                    predictionKey = d[0]

        ans += predictionKey
        predictionKey = None
        predictionVal = 0
    print(ans)


